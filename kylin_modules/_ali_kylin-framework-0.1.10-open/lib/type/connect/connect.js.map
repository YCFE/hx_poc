{"version":3,"sources":["../../../src/type/connect/connect.js"],"names":["hasConnectProperty","connectProperties","obj","ret","Object","keys","forEach","k","connectEmitArgChildToParent","connectEmitArgParentToChild","createConnect","options","normalizeOptions","mapStateToProps","mapMethodsToProps","mapMethodsToEvents","mapActionsToMethods","mapMutationsToMethods","mapMethods","mapEvents","stateToProps","methodsToProps","methodsToEvents","eventsTransport","mapMethodsAll","mapMethodsDisable","length","methodsTransport","mutationsToMethods","actionsToMethods","name","Component","getOptions","propKeys","eventKeys","applyStoreMapToComponent","needTransportMethods","methods","containerProps","props","componentsProps","components","computed","bindStore","bindMethodsTransport","beforeCreate","bindEvents","eventKey","middleConnectSelf","$on","q","arguments","args","concat","push","$refs","child","$emit","apply","insertRenderer","render","h","on","bindEventEmit","ref","fn","boundFunctionWithStore","call","$store","v","boundFunctionWithMethodTransport","Array","isArray","reduce","value","ComponentOption","option","ex","console","error"],"mappings":"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","file":"connect.js","sourcesContent":["import Vue from 'vue'\n\nimport {\n  mapState,\n  mapActions,\n  mapMutations\n} from 'vuex'\n\nimport {\n  camelToKebab,\n  merge,\n  pick,\n  omit,\n  keys,\n  mapValues,\n  toArray\n} from './utils'\n\nimport {\n  objectAssign\n} from '../utils';\n\n// const connectProperties = makeMap(['mapStateToProps','mapMethodsToProps', 'mapMethodsToEvents', 'mapEvents', 'mapMethods', 'mapActionsToMethods', 'mapMutationsToMethods'], true);\nconst connectProperties = {\n  'mapStateToProps': true,\n  'mapMethodsToProps': true, \n  'mapMethodsToEvents': true, \n  'mapEvents': true, \n  'mapMethods': true, \n  'mapActionsToMethods': true, \n  'mapMutationsToMethods': true\n};\n\nexport function hasConnectProperty(obj) {\n  if ( !obj ) return false;\n\n  let ret = false;\n  Object.keys(obj).forEach(k => {\n    ret = ret || connectProperties[k];\n  })\n\n  return ret;\n}\n\nconst connectEmitArgChildToParent = '$$__child_to_parent__$$'\nconst connectEmitArgParentToChild = '$$__parent_to_child__$$'\n\nexport const createConnect = transform => (options = {}) => {\n  const {\n    mapStateToProps = {},\n    mapMethodsToProps = {},\n    mapMethodsToEvents = {},\n    mapActionsToMethods = {},\n    mapMutationsToMethods = {},\n    mapMethods = [],\n    mapEvents = []\n  } = mapValues(options, normalizeOptions)\n\n  const stateToProps = mapStateToProps;\n  const methodsToProps = mapMethodsToProps;\n  const methodsToEvents = mapMethodsToEvents;\n  const eventsTransport = keys(mapEvents);\n\n  const mapMethodsAll = mapMethods === true;\n  // 为非值 或 数组为空\n  const mapMethodsDisable = !mapMethods || mapMethods.length === 0;\n  const methodsTransport = mapMethodsAll || mapMethodsDisable ? [] : keys(mapMethods);\n\n  const mutationsToMethods = mapMutationsToMethods;\n  const actionsToMethods = mapActionsToMethods;\n\n  // 会被调用1或2次\n  // 因为vue-loader 那一层会做一次拆解并再调用\n  return function(name, Component) {\n    if (typeof name !== 'string') {\n      Component = name\n      name = getOptions(Component).name || 'wrapped-anonymous-component'\n    }\n\n    const propKeys = keys(\n      stateToProps,\n      methodsToProps\n    )\n\n    const eventKeys = keys(\n      methodsToEvents\n    )\n\n    applyStoreMapToComponent(Component, mutationsToMethods, actionsToMethods);\n\n    let needTransportMethods = {};\n\n    // 为空值\n    if (!mapMethodsDisable) {\n      const methods = getOptions(Component).methods || {};\n\n      needTransportMethods = pick(methods, mapMethodsAll ? Object.keys(methods) : methodsTransport);\n    }\n    // 组件本身的props，去掉应该被注入的propKeys，剩下的需要由上层组件传入\n    const containerProps = omit(getOptions(Component).props || {}, propKeys)\n\n    const componentsProps = {};\n    componentsProps[name] = Component;\n\n    const options = {\n      name: `connect-${name}`,\n      props: containerProps,\n      components: componentsProps,\n      computed: mapState(stateToProps),\n      methods: merge(\n        mapValues(merge(methodsToProps, methodsToEvents), bindStore),\n        mapValues(merge(needTransportMethods), bindMethodsTransport)\n      ),\n      beforeCreate: [function bindEvents() {\n\n        eventsTransport.forEach((eventKey) => { \n          // 指向 connect-name 组件的this\n          // 该事件监听，可以被 父组件直接触发    \n          var middleConnectSelf = this;   \n\n          middleConnectSelf.$on(eventKey, function (q) {           \n            // 如果是孩子接收到被 connect拦截转发到上层，不能再发回孩子，会造成死循环\n            if ( arguments[ arguments.length-1 ] === connectEmitArgChildToParent )  {\n              return;\n            }\n            // 向下传递事件\n            const args = [eventKey].concat(toArray(arguments));\n            args.push(connectEmitArgParentToChild);\n            middleConnectSelf.$refs.child.$emit.apply(middleConnectSelf.$refs.child, args);\n          });\n        })\n      }]\n    }\n\n    // insertLifecycleMixin(options, lifecycle)\n    insertRenderer(options, name, propKeys.concat(Object.keys(containerProps)), eventKeys, eventsTransport)\n\n    // if (transform) {\n    //   transform(options, lifecycle)\n    // }\n\n    //return Vue.extend(options)\n    return options;\n  }\n}\n\nfunction insertRenderer(options, name, propKeys, eventKeys, eventsTransport) {\n\n  options.render = function(h) {\n    return h(name, {\n      props: pick(this, propKeys),\n      on: merge(pick(this, eventKeys), bindEventEmit(this, eventsTransport)),\n      ref: 'child'\n    })\n  }\n}\n\nfunction bindEventEmit(middleConnectSelf, eventsTransport){\n  const ret = {};\n\n  eventsTransport.forEach((k) => {\n    ret[k] = function () {\n      // 防止多次传递\n      if ( arguments[arguments.length-1] === connectEmitArgParentToChild ) {\n        return;\n      }\n\n      const args = [k].concat(toArray(arguments));\n      args.push(connectEmitArgChildToParent)\n      middleConnectSelf.$emit.apply(middleConnectSelf,args);\n    }\n  });\n  \n  return ret;\n}\n\nfunction getOptions(Component) {\n  if (typeof Component === 'function') {\n    return Component.options\n  }\n  return Component\n}\n\nfunction bindStore(fn) {\n  return function boundFunctionWithStore(...args) {\n    return fn.call(this, this.$store, ...args)\n  }\n}\n\nfunction bindMethodsTransport(v, k) {\n  return function boundFunctionWithMethodTransport(...args) {\n    // 转而调用孩子的方法\n    const child = this.$refs.child;\n    if ( typeof child[k] === 'function' ) {\n      return child[k].call(child, ...args);\n    }\n  }\n}\n\nfunction normalizeOptions(options) {\n  return Array.isArray(options)\n    ? options.reduce((obj, value) => {\n      obj[value] = value\n      return obj\n    }, {})\n    : options\n}\n\n\nfunction applyStoreMapToComponent(ComponentOption, mutationsToMethods, actionsToMethods) {\n\n  // 直接挂在到 computed 上面去\n  // merge 到 computed 上面\n  try {\n    const option = getOptions(ComponentOption);\n\n    option.methods = option.methods || {};\n\n    if ( mutationsToMethods && Object.keys(mutationsToMethods).length ) {\n      objectAssign(option.methods,\n        mapMutations(mutationsToMethods)\n      );\n    }\n    if ( actionsToMethods && Object.keys(actionsToMethods).length ) {\n      objectAssign(option.methods,\n        mapActions(actionsToMethods)\n      );\n    }\n  }\n  catch(ex) {\n    if ( typeof console !== 'undefined' && typeof console.error === 'function' ) {\n      console.error(ex);\n    }\n  }\n}"]}