{"version":3,"sources":["../src/index.js"],"names":["program","kylinApp","hint","option","resourceMap","map","shouldClearOther","onlyMap","Object","keys","forEach","k","npmName","configObj","external","js","css","msg","filter","Boolean","join","success","resource","babel","webpack","browser","cwd","process","pluginName"],"mappings":";;;;;;;kBAUe,gBAAmD;AAAA,MAAxCA,OAAwC,QAAxCA,OAAwC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;;AAEhE,MAAMC,cAAcD,OAAOE,GAA3B;AACA,MAAMC,mBAAmB,CAAC,CAACH,OAAOI,OAAlC;;AAKA,MAAKH,WAAL,EAAmB;AACjBI,WAAOC,IAAP,CAAYL,WAAZ,EAAyBM,OAAzB,CAAiC,UAACC,CAAD,EAAO;AACtC,UAAMC,UAAUD,CAAhB;AACA,UAAME,YAAYT,YAAYO,CAAZ,CAAlB;AACA,UAAK,CAACE,SAAN,EAAkB;;AAElB,UAAMC,WAAWD,UAAUC,QAA3B;AACA,UAAMC,KAAKF,UAAUE,EAArB;AACA,UAAMC,MAAMH,UAAUG,GAAtB;;AAEA,UAAI,CAACF,QAAL,EAAe;AACf,UAAI,CAACC,EAAD,IAAO,CAACC,GAAZ,EAAiB;;AAEjB,UAAMC,MAAM,CACVF,gBAAaA,EAAb,UAAqB,IADX,EAEVC,kBAAeA,GAAf,UAAwB,IAFd,EAGVE,MAHU,CAGHC,OAHG,EAGMC,IAHN,CAGW,GAHX,CAAZ;AAIAlB,WAAKmB,OAAL,qBAA+BT,OAA/B,qBAAqDE,QAArD,eAAsEG,GAAtE;AACD,KAjBD;AAkBD;;AAED,SAAO,CAAC,CAAEb,WAAH,GAAiB;AAEtBkB,cAAU,wBAAqB;AAC7BlB,8BAD6B;AAE7BE;AAF6B,KAArB,CAFY;;AAOtBiB,WAAO,IAPe;;AAStBC,aAAS,IATa;;AAYtBC,aAAS;AAZa,GAAjB,GAaH,IAbJ;AAeD,C;;AAtDD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,MAAMC,QAAQD,GAAR,EAAZ;;AAEO,IAAME,kCAAa,4BAAnB","file":"index.js","sourcesContent":["import generateResourceImpl from './runtime/resource.js';\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\nimport assert from 'assert';\n\nconst cwd = process.cwd();\n\nexport const pluginName = '@ali/kylin-plugin-resource';\n\nexport default function({ program, kylinApp, hint }, option = {}) {\n  \n  const resourceMap = option.map;\n  const shouldClearOther = !!option.onlyMap;\n\n  // 处理下 resourceMap\n  // 看看是否符合规定\n\n  if ( resourceMap ) {\n    Object.keys(resourceMap).forEach((k) => {\n      const npmName = k;\n      const configObj = resourceMap[k];\n      if ( !configObj ) return;\n\n      const external = configObj.external;\n      const js = configObj.js;\n      const css = configObj.css;\n\n      if (!external) return;\n      if (!js && !css) return;\n\n      const msg = [\n        js ? `js: '${js}'` : null,\n        css ? `css: '${css}'` : null,\n      ].filter(Boolean).join(',');\n      hint.success(`[Resource]`, `\"${npmName}\"=>\"global['${external}']\": (${msg})`);\n    }); \n  }\n\n  return !! resourceMap ? {\n    // 在build时修改全局注入资源的能力\n    resource: generateResourceImpl({\n      resourceMap,\n      shouldClearOther\n    }),\n    // 在build时提供修改babelConfig的能力\n    babel: null,\n    // 在build时提供修改webpackConfig的能力\n    webpack: null,\n    // 在浏览器中会执行的代码，不能直接返回函数，必须返回resolve后的路径 \n    // 提供一个从node获取数据注入到broswer的简易流程\n    browser: null\n  } : null\n\n}"]}