{"version":3,"sources":["../../src/utils/hook.js"],"names":["hookRender","tryHookUpdated","logPluginLoad","KYLIN_PERFLOG_VERSION","NATIVE_NAVIGATION_START","BIZ_INIT_LOCAL","BIZ_INIT_GLOBAL","BIZ_INIT_PLUGIN","PAGE_INITED","PAGE_MOUNTED","PAGE_FIRST_RENDERED","STORE_CHANGE_START","STORE_CHANGE_IDLE","STORE_CHANGE_COUNT","UPDATE_START","UPDATE_IDLE","UPDATE_COUNT","UPDATE_BATCH_COUNT","META_URL","META_RANDOM","REPORT_TYPE_RENDER","REPORT_TYPE_STORE","REPORT_TYPE_UPDATED","GLOBAL_MAP_CUSTOM","GLOBAL_MAP_CUSTOM_PREFIX","timeMap","window","storeChangeLogCount","storeChanging","storeChangeTId","storeChangeLogMax","currentStoreChangeInfo","options","preprocessHook","beforeCreate","push","hookPageBeforeCreate","mounted","hookPageMounted","monitorNavigationStart","ex","console","error","hookUpdatedProcessed","hookUpdated","Vue","isLocalVue","mixin","updated","updatedProcess","timeMapAdd","now","addCustomKeyBeforeInited","addMeta","location","href","e","map","Object","keys","forEach","k","_Vue","performance","timing","navigationStart","setTimeout","timeReport","Date","getTime","id","time","type","param1","hookName","Array","isArray","currentUpdatedTick","updatedBatchCount","currentUpdateComponentCount","updatedLogMax","needReportMap"],"mappings":"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","file":"hook.js","sourcesContent":["import { performanceRemoteLog, log, getRandom } from './log';\n\nconst KYLIN_PERFLOG_VERSION = 'kylin_perflog_version';\nconst NATIVE_NAVIGATION_START = 'page_navigation_start';\nconst BIZ_INIT_LOCAL = 'biz_init_local';\nconst BIZ_INIT_GLOBAL = 'biz_init_global';\nconst BIZ_INIT_PLUGIN = 'biz_init_plugin';\nconst PAGE_INITED = 'page_inited';\nconst PAGE_MOUNTED = 'page_mounted';\nconst PAGE_FIRST_RENDERED = 'page_first_rendered';\nconst STORE_CHANGE_START = 'store_change_start';\nconst STORE_CHANGE_IDLE = 'store_change_idle';\nconst STORE_CHANGE_COUNT = 'store_change_count';\nconst UPDATE_START = 'updated_start';\nconst UPDATE_IDLE = 'updated_idle';\nconst UPDATE_COUNT = 'update_count';\nconst UPDATE_BATCH_COUNT = 'update_batch_count';\n\nconst META_URL = 'meta_url';\nconst META_RANDOM = 'meta_random';\n\nconst REPORT_TYPE_RENDER = 'FIRST_RENDER';\nconst REPORT_TYPE_STORE = 'STORE_CHANGE';\nconst REPORT_TYPE_UPDATED = 'UPDATED';\n\nconst GLOBAL_MAP_CUSTOM = '__kylin_perflog_custom_map__';\nconst GLOBAL_MAP_CUSTOM_PREFIX = 'custom_';\n\nlet timeMap = {};\ntimeMap[KYLIN_PERFLOG_VERSION] = '201802110000';\nif (typeof window !== 'undefined') {\n  window.timeMap = timeMap;\n}\nlet storeChangeLogCount = 1;\nlet storeChanging = false;\nlet storeChangeTId = null;\nconst storeChangeLogMax = 4;\nlet currentStoreChangeInfo = null;\n// 不是一次commit，而是 一次同步执行中，触发的多次commit都算一次change\n\n// 钩子勾住 beforeCreate, mounted 来拿到业务首次主动渲染时间, 以及后续的store变更时间\nexport function hookRender(options) {\n  try {\n    preprocessHook(options, 'mounted');\n    preprocessHook(options, 'beforeCreate');\n\n    options.beforeCreate.push(hookPageBeforeCreate);\n\n    options.mounted.push(hookPageMounted);\n\n    // if (options.store && typeof options.store.subscribe === 'function') {\n    //   options.store.subscribe(hookStoreChange);\n    // }\n\n    monitorNavigationStart();\n  } catch (ex) {\n    if (typeof console.error === 'function') {\n      console.error(ex);\n    }\n  }\n}\n\nlet hookUpdatedProcessed = false;\n// 钩子勾住所有 所有vm option的的updated钩子\nfunction hookUpdated(Vue, isLocalVue) {\n  Vue.mixin({\n    updated: updatedProcess\n  });\n  if (isLocalVue) {\n    timeMapAdd(BIZ_INIT_LOCAL, now());\n  } else {\n    timeMapAdd(BIZ_INIT_GLOBAL, now());\n  }\n\n  addCustomKeyBeforeInited();\n  addMeta();\n}\n\nfunction addMeta() {\n  try {\n    timeMapAdd(META_URL, window.location.href);\n    timeMapAdd(META_RANDOM, getRandom());\n  } catch (ex) {\n    try {\n      console.error(ex);\n    } catch (e) {}\n  }\n}\n\nfunction addCustomKeyBeforeInited() {\n  // 尝试读取下window下的已有数据\n  // TODO: 该数据应在 build期间对html进行修改注入，放在 script src 所有标签之前\n  try {\n    if (typeof window !== 'undefined' && typeof window[GLOBAL_MAP_CUSTOM] === 'object') {\n      const map = window[GLOBAL_MAP_CUSTOM];\n      // 把里面的所有点全都上报上来\n      Object.keys(map).forEach((k) => {\n        if (typeof map[k] === 'number') {\n          timeMapAdd(`${GLOBAL_MAP_CUSTOM_PREFIX}${k}`, map[k]);\n        }\n      });\n    }\n  } catch (ex) {\n    try {\n      console.error(ex);\n    } catch (e) {}\n  }\n}\n\nexport function tryHookUpdated(_Vue) {\n  try {\n    const Vue = window.Vue || _Vue;\n\n    if (Vue && !hookUpdatedProcessed) {\n      hookUpdated(Vue, !!_Vue);\n      hookUpdatedProcessed = true;\n    }\n  } catch (ex) {\n    log(ex);\n  }\n\n  return hookUpdatedProcessed;\n}\n\nfunction monitorNavigationStart() {\n  if (window.performance && window.performance.timing && window.performance.timing.navigationStart) {\n    timeMapAdd(NATIVE_NAVIGATION_START, window.performance.timing.navigationStart);\n  }\n}\n\nfunction hookPageBeforeCreate() {\n  timeMapAdd(PAGE_INITED, now());\n}\n\nfunction hookPageMounted() {\n  timeMapAdd(PAGE_MOUNTED, now());\n  setTimeout(function () {\n    timeMapAdd(PAGE_FIRST_RENDERED, now());\n    timeReport(REPORT_TYPE_RENDER);\n  }, 0);\n}\n\n// function hookStoreChange(mutation, state) {\n//   // queue 次数控制\n//   if (storeChangeLogCount > storeChangeLogMax) {\n//     return;\n//   }\n\n//   // 每个queue中的第一个\n//   if (storeChanging === false) {\n//     storeChanging = true;\n//     timeMapAdd(`${STORE_CHANGE_START}_${storeChangeLogCount}`, now());\n//     // console.time(`${STORE_CHANGE_START}_${storeChangeLogCount}`);\n//   }\n\n//   clearTimeout(storeChangeTId);\n//   storeChangeTId = setTimeout(function () {\n//     // 重置状态\n//     storeChanging = false;\n//     // console.timeEnd(`${STORE_CHANGE_START}_${storeChangeLogCount}`);\n//     timeMapAdd(`${STORE_CHANGE_IDLE}_${storeChangeLogCount}`, now());\n//     timeReport(REPORT_TYPE_STORE, {\n//       [STORE_CHANGE_COUNT]: storeChangeLogCount\n//     });\n//     storeChangeLogCount++;\n//   });\n// }\n\nfunction now() {\n  return (new Date()).getTime();\n}\n\nfunction timeMapAdd(id, time) {\n  time = time || now();\n  // 应该在何时上报日志, 如果没上报怎么处理\n\n  // 上报时，标注 kylin_log_version 控制过滤\n  // 上报时，使用不同埋点\n  timeMap[id] = time;\n}\n\nfunction timeReport(type, param1) {\n  switch (type) {\n    case REPORT_TYPE_RENDER:\n      // 上报 init, mount, render\n      performanceRemoteLog(REPORT_TYPE_RENDER, timeMap);\n      break;\n    case REPORT_TYPE_STORE:\n      // 上报 store_count\n      performanceRemoteLog(REPORT_TYPE_STORE, timeMap, param1);\n      break;\n    case REPORT_TYPE_UPDATED:\n      // 上报 store_count\n      performanceRemoteLog(REPORT_TYPE_UPDATED, timeMap, param1);\n      break;\n  }\n}\n\nfunction preprocessHook(options, hookName) {\n  options[hookName] = options[hookName] || [];\n  // 如果是非数组，修改成数组\n  if (!Array.isArray(options[hookName])) {\n    options[hookName] = [ options[hookName] ];\n  }\n}\n\n// 是否在更新批次中\nlet currentUpdatedTick = false;\n// 当前是第几次更新批次\nlet updatedBatchCount = 1;\n// 当前更新批次里面触发了多少次updated回调\nlet currentUpdateComponentCount = 0;\n\n// 只记录前几次更新批次\nconst updatedLogMax = 3;\n\nfunction updatedProcess() {\n  // 前3次\n  if (updatedBatchCount > updatedLogMax) return;\n\n  // 当前更新了几个组件\n  currentUpdateComponentCount++;\n\n  // 同步更新中的话，跳过\n  if (currentUpdatedTick) return;\n\n  currentUpdatedTick = true;\n\n  timeMapAdd(`${UPDATE_START}_${updatedBatchCount}`);\n\n  setTimeout(function () {\n    // 当前同步过程结束\n    timeMapAdd(`${UPDATE_IDLE}_${updatedBatchCount}`);\n\n    var needReportMap = {};\n    needReportMap[UPDATE_COUNT] = currentUpdateComponentCount;\n    needReportMap[UPDATE_BATCH_COUNT] = updatedBatchCount;\n\n    timeReport(REPORT_TYPE_UPDATED, needReportMap);\n\n    currentUpdatedTick = false;\n    updatedBatchCount++;\n    currentUpdateComponentCount = 0;\n  }, 0);\n}\n\nexport function logPluginLoad() {\n  timeMapAdd(BIZ_INIT_PLUGIN);\n}\n"]}