{"version":3,"sources":["../../src/utils/log.js"],"names":["performanceRemoteLog","getRandom","seedIdPrefix","seedId","param1","param2","logReport","time","Date","getTime","random","Math","toString","slice","remoteConfig","objToStr","obj","sep","strArr","prop","hasOwnProperty","push","ex","join"],"mappings":";;;;;QAKgBA,oB,GAAAA,oB;QAIAC,S,GAAAA,S;;AARhB;;AAEA,IAAMC,eAAe,uBAArB;;AAEO,SAASF,oBAAT,CAA8BG,MAA9B,EAAgE;AAAA,MAA1BC,MAA0B,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACrE,SAAOC,eAAaJ,YAAb,GAA4BC,MAA5B,EAAsCC,MAAtC,EAA8CC,MAA9C,CAAP;AACD;;AAEM,SAASJ,SAAT,GAAqB;AAC1B,MAAMM,OAAQ,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAb;AACA,MAAMC,SAASC,KAAKD,MAAL,GAAcE,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAf;AACA,SAAUN,IAAV,SAAkBG,MAAlB;AACD;;AAED,SAASJ,SAAT,CAAmBH,MAAnB,EAAqD;AAAA,MAA1BC,MAA0B,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACnD,MAAMS,eAAe;AACnBX,YAAQA,MADW;AAEnBC,YAAQW,SAASX,MAAT,EAAiB,GAAjB,CAFW;AAGnBC,YAAQU,SAASV,MAAT,EAAiB,GAAjB;AAHW,GAArB;;AAMA,SAAO,uBAAU,WAAV,EAAuBS,YAAvB,CAAP;AACD;;AAED,SAASC,QAAT,CAAkBC,GAAlB,EAAkC;AAAA,MAAXC,GAAW,uEAAL,GAAK;;AAChC,MAAIC,SAAS,EAAb;;AAEA,MAAI;AACF,SAAK,IAAIC,IAAT,IAAiBH,GAAjB,EAAsB;AACpB,UAAIA,IAAII,cAAJ,CAAmBD,IAAnB,CAAJ,EAA8B;AAC5BD,eAAOG,IAAP,CAAYF,OAAO,GAAP,GAAaH,IAAIG,IAAJ,CAAzB;AACD;AACF;AACF,GAND,CAME,OAAOG,EAAP,EAAW;AACX,WAAO,EAAP;AACD;;AAED,SAAOJ,OAAOK,IAAP,CAAYN,GAAZ,CAAP;AACD","file":"log.js","sourcesContent":["// 用来做具体调用上报\nimport { readyCall } from './bridge';\n\nconst seedIdPrefix = 'H5_KYLIN_PERFORMANCE_';\n\nexport function performanceRemoteLog(seedId, param1 = {}, param2 = {}) {\n  return logReport(`${seedIdPrefix}${seedId}`, param1, param2);\n}\n\nexport function getRandom() {\n  const time = (new Date()).getTime();\n  const random = Math.random().toString(16).slice(2);\n  return `${time}_${random}`;\n}\n\nfunction logReport(seedId, param1 = {}, param2 = {}) {\n  const remoteConfig = {\n    seedId: seedId,\n    param1: objToStr(param1, '^'),\n    param2: objToStr(param2, '^')\n  };\n\n  return readyCall('remoteLog', remoteConfig);\n}\n\nfunction objToStr(obj, sep = '^') {\n  let strArr = [];\n\n  try {\n    for (let prop in obj) {\n      if (obj.hasOwnProperty(prop)) {\n        strArr.push(prop + '=' + obj[prop]);\n      }\n    }\n  } catch (ex) {\n    return '';\n  }\n\n  return strArr.join(sep);\n}\n"]}