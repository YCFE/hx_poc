{"version":3,"sources":["../src/index.js"],"names":["program","kylinApp","hint","option","browser","require","resolve","cwd","process","pluginName"],"mappings":";;;;;;;kBAUe,gBAAmD;AAAA,MAAxCA,OAAwC,QAAxCA,OAAwC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAChE,SAAO;AAOLC,aAASC,QAAQC,OAAR,CAAgB,sBAAhB;AAPJ,GAAP;AASD,C;;AApBD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,MAAMC,QAAQD,GAAR,EAAZ;;AAEO,IAAME,kCAAa,2BAAnB","file":"index.js","sourcesContent":["import generateBuildImpl from './runtime/build.js';\nimport generateBabelImpl from './runtime/babel.js';\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\n\nconst cwd = process.cwd();\n\nexport const pluginName = '@ali/kylin-plugin-perflog';\n\nexport default function({ program, kylinApp, hint }, option = {}) {\n  return {\n    // 在build时提供修改babelConfig的能力\n    // babel: generateBabelImpl(),\n    // 在build时提供修改webpackConfig的能力\n    // webpack: generateBuildImpl(),\n    // 在浏览器中会执行的代码，不能直接返回函数，必须返回resolve后的路径\n    // 提供一个从node获取数据注入到broswer的简易流程\n    browser: require.resolve('./runtime/browser.js')\n  };\n}\n"]}