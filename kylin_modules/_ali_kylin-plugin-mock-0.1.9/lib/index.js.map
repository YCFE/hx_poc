{"version":3,"sources":["../src/index.js"],"names":["program","kylinApp","hint","option","allowMockProd","rawArgs","indexOf","enable","mock","undefined","filter","d","prod","warn","config","Boolean","absoluteConfig","resolve","cwd","existsSync","success","error","red","yellow","babel","webpack","browser","require","process","pluginName"],"mappings":";;;;;;;kBASe,gBAAmD;AAAA,MAAxCA,OAAwC,QAAxCA,OAAwC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;;AAEhE,MAAMC,gBAAgBJ,QAAQK,OAAR,CAAgBC,OAAhB,CAAwB,mBAAxB,KAAgD,CAAtE;;AAEA,MAAIC,SAAS,CACX,OAAOP,QAAQQ,IAAf,KAAwB,SAAxB,GAAoCR,QAAQQ,IAA5C,GAAmDC,SADxC,EAEX,OAAOT,QAAQQ,IAAf,KAAwB,WAAxB,GAAsCC,SAAtC,GAAiD,CAAC,CAACT,QAAQQ,IAFhD,EAGX,OAAOL,OAAOI,MAAd,KAAyB,SAAzB,GAAqCJ,OAAOI,MAA5C,GAAqDE,SAH1C,EAIX,KAJW,EAKXC,MALW,CAKJ;AAAA,WAAK,OAAOC,CAAP,KAAc,SAAnB;AAAA,GALI,EAK0B,CAL1B,CAAb;;AAOA,MAAKX,QAAQY,IAAR,IAAgB,CAACR,aAAjB,IAAkCG,MAAvC,EAAgD;AAC9CL,SAAKW,IAAL,CAAU,QAAV;AACAN,aAAS,KAAT;AACD;;AAGD,MAAIO,SAAS,CACX,OAAOd,QAAQQ,IAAf,KAAwB,QAAxB,GAAmCR,QAAQQ,IAA3C,GAAkD,EADvC,EAEX,OAAOL,OAAOW,MAAd,KAAyB,QAAzB,GAAoCX,OAAOW,MAA3C,GAAoD,EAFzC,EAGX,uBAHW,EAIXJ,MAJW,CAIJK,OAJI,EAIK,CAJL,CAAb;;AAMA,MAAMC,iBAAiB,eAAKC,OAAL,CAAcC,GAAd,EAAmBJ,MAAnB,CAAvB;;AAKA,MAAKP,MAAL,EAAc;AACZ,QAAK,aAAGY,UAAH,CAAeH,cAAf,CAAL,EAAuC;AACrCd,WAAKkB,OAAL,CAAa,QAAb,0CAA0CN,MAA1C;AACD,KAFD,MAEO;AACLP,eAAS,KAAT;AACAL,WAAKmB,KAAL,CAAW,QAAX,EAAyB,gBAAMC,GAAN,4BAAzB,UAAgD,gBAAMA,GAAN,CAAUR,MAAV,CAAhD,UAAuE,gBAAMQ,GAAN,0HAAvE,4BAAqH,gBAAMC,MAAN,+EAArH;AACD;AACF;;AAED,SAAOhB,SAAS;AAEdiB,WAAO,IAFO;;AAIdC,aAAS,qBAAkBT,cAAlB,CAJK;;AAYdU,aAASC,QAAQV,OAAR,CAAgB,sBAAhB;AAZK,GAAT,GAaH,EAbJ;AAeD,C;;AA7DD;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,MAAMU,QAAQV,GAAR,EAAZ;;AAEO,IAAMW,kCAAa,wBAAnB","file":"index.js","sourcesContent":["import generateBuildImpl from './runtime/build.js';\nimport path from 'path';\nimport fs from 'fs';\nimport chalk from 'chalk';\n\nconst cwd = process.cwd();\n\nexport const pluginName = '@ali/kylin-plugin-mock';\n\nexport default function({ program, kylinApp, hint }, option = {}) {\n\n  const allowMockProd = program.rawArgs.indexOf('--allow-mock-prod') >= 0;\n  // 先看option, 然后再看 arg\n  let enable = [\n    typeof program.mock === 'boolean' ? program.mock : undefined,\n    typeof program.mock === 'undefined' ? undefined: !!program.mock,\n    typeof option.enable === 'boolean' ? option.enable : undefined,\n    false\n  ].filter(d => typeof(d) === 'boolean')[0];\n\n  if ( program.prod && !allowMockProd && enable ) {\n    hint.warn(\"[Mock]\", `prod构建关闭mock功能`);\n    enable = false;\n  }\n\n  // 先看option, 然后再看 arg\n  let config = [  \n    typeof program.mock === 'string' ? program.mock : '',\n    typeof option.config === 'string' ? option.config : '',\n    './mock/mock.config.js'\n  ].filter(Boolean)[0];\n\n  const absoluteConfig = path.resolve( cwd, config );\n\n  // 开启mock\n  // 开启失败\n\n  if ( enable ) {\n    if ( fs.existsSync( absoluteConfig ) ) {\n      hint.success(\"[Mock]\", `加载 LunaMock 配置 ${ config }`);\n    } else {\n      enable = false;\n      hint.error(\"[Mock]\", `${ chalk.red(`没有找到`) } [${chalk.red(config)}] ${ chalk.red(`，将使用默认配置，无法使用自定义mock功能，`) }\\n请参考${ chalk.yellow(`http://gitlab.alipay-inc.com/luna/luna-mock/blob/master/demo/mock.config.js`) }`);\n    }\n  }\n\n  return enable ? {\n    // 在build时提供修改babelConfig的能力\n    babel: null,\n    // 在build时提供修改webpackConfig的能力\n    webpack: generateBuildImpl(absoluteConfig),\n    // 在浏览器中会执行的代码，不能直接返回函数，必须返回resolve后的路径 \n    // 提供一个从node获取数据注入到broswer的简易流程\n    // 注入代码片段！不止数据\n    // 用户希望\n    // 运行该函数，输出code字符串\n    // 剩下的事，由build完成注入\n    // 片段拼接自行完成\n    browser: require.resolve('./runtime/browser.js')\n  } : {}\n\n}"]}