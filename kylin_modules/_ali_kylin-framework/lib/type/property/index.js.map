{"version":3,"sources":["../../../src/type/property/index.js"],"names":["modifyProperty","PropertyProcessor","Property","Watch","DefaultProperty","decoratorMap","Object","create","processorMap","modifierArray","options","forEach","func","PropertyDecorator","target","key","descriptor","decorator","proto","processor","registerProperty","config","Error","propertyKey","prototypeKey","modifier","push","isStatic","isProperty","initializer","require"],"mappings":";;;;QAQgBA,c,GAAAA,c;QAuBAC,iB,GAAAA,iB;QA6CAC,Q,GAAAA,Q;;;;;;;kBA6CPC,K;;;;AAzHT;;AAMA;;IAAYC,e;;;;AAJZ,IAAMC,eAAeC,OAAOC,MAAP,CAAc,IAAd,CAArB;AACA,IAAMC,eAAeF,OAAOC,MAAP,CAAc,IAAd,CAArB;AACA,IAAME,gBAAgB,EAAtB;;AAIO,SAAST,cAAT,CAAwBU,OAAxB,EAAiC;AAGtCD,gBAAcE,OAAd,CAAsB,gBAAQ;AAC5BC,SAAKF,OAAL;AACD,GAFD;AAID;;AAED,SAASG,iBAAT,CAA2BC,MAA3B,EAAmCC,GAAnC,EAAwCC,UAAxC,EAAoD;AAClD;;AAGA,MAAK,OAAOX,aAAaU,GAAb,CAAP,KAA6B,UAAlC,EAA+C;AAC7CV,iBAAaU,GAAb,EAAkBD,MAAlB,EAA0BC,GAA1B,EAA+BC,UAA/B;AACD,GAFD,MAIK;AACHZ,sBAAgBa,SAAhB,CAA0BH,MAA1B,EAAkCC,GAAlC,EAAuCC,UAAvC;AAED;AACF;;AAEM,SAASf,iBAAT,CAA2BiB,KAA3B,EAAkCH,GAAlC,EAAuCL,OAAvC,EAAgD;AACrD;;AAGA,MAAK,OAAOF,aAAaO,GAAb,CAAP,KAA6B,UAAlC,EAA+C;AAC7CP,iBAAaO,GAAb,EAAkBG,KAAlB,EAAyBH,GAAzB,EAA8BL,OAA9B;AACD,GAFD,MAIK;AACHN,sBAAgBe,SAAhB,CAA0BD,KAA1B,EAAiCH,GAAjC,EAAsCL,OAAtC;AAED;AAEF;;AAED,SAASU,gBAAT,CAA0BC,MAA1B,EAAkC;AAChC;;AACA,MAAK,CAACA,MAAN,EAAe;AACb,UAAM,IAAIC,KAAJ,oCAA6CD,MAA7C,CAAN;AACD;;AAED,MAAK,CAACA,OAAOE,WAAR,IAAuB,CAACF,OAAOG,YAA/B,IAA+C,CAACH,OAAOF,SAAvD,IAAoE,CAACE,OAAOJ,SAAjF,EAA6F;AAC3F,UAAM,IAAIK,KAAJ,oCAA6CD,MAA7C,CAAN;AACD;;AAEDhB,eAAagB,OAAOE,WAApB,IAAmCF,OAAOJ,SAA1C;AACAT,eAAaa,OAAOG,YAApB,IAAoCH,OAAOF,SAA3C;;AAEA,MAAK,OAAOE,OAAOI,QAAd,KAA2B,UAAhC,EAA6C;AAC3ChB,kBAAciB,IAAd,CAAmBL,OAAOI,QAA1B;AACD;AACF;;AAcM,SAASvB,QAAT,CAAkBY,MAAlB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2C;AAChD;;AAUA,MAAMW,WAAW,OAAOb,MAAP,KAAkB,UAAnC;;AASA,MAAMc,aAAa,OAAOZ,WAAWa,WAAlB,KAAkC,UAArD;;AAGA,MAAK,CAACD,UAAN,EAAmB;AACjB,UAAM,IAAIN,KAAJ,EAAaK,WAAS,QAAT,GAAkB,QAA/B,kBAAmDZ,GAAnD,2FAAN;AACD;;AAQDF,oBAAkBC,MAAlB,EAA0BC,GAA1B,EAA+BC,UAA/B;AAED;;AAGDI,iBAAiBU,QAAQ,QAAR,CAAjB;AACAV,iBAAiBU,QAAQ,SAAR,CAAjB;AACAV,iBAAiBU,QAAQ,SAAR,CAAjB;AACAV,iBAAiBU,QAAQ,cAAR,CAAjB","file":"index.js","sourcesContent":["import { warn } from '../utils';\n\nconst decoratorMap = Object.create(null);\nconst processorMap = Object.create(null);\nconst modifierArray = [];\n\nimport * as DefaultProperty from './default';\n\nexport function modifyProperty(options) {\n\n  // 批量使用 modifier 处理\n  modifierArray.forEach(func => {\n    func(options);\n  });\n\n}\n\nfunction PropertyDecorator(target, key, descriptor) {\n  \"use strict\";\n\n  // 找到了配置好的 decorator\n  if ( typeof decoratorMap[key] === 'function' ) {\n    decoratorMap[key](target, key, descriptor);\n  }\n  // 默认行为，啥都不干\n  else {\n    DefaultProperty.decorator(target, key, descriptor);\n    // warn(`Property ${key} has no specific Decorator registered, using default`);\n  }\n}\n\nexport function PropertyProcessor(proto, key, options) {\n  \"use strict\";\n\n  // 找到了配置好的 processor\n  if ( typeof processorMap[key] === 'function' ) {\n    processorMap[key](proto, key, options);\n  }\n  // 默认行为，啥都不干\n  else {\n    DefaultProperty.processor(proto, key, options);\n    // warn(`Property ${key} has no specific Procossor registered, using default`);\n  }\n\n}\n\nfunction registerProperty(config) {\n  \"use strict\";\n  if ( !config ) {\n    throw new Error(`registerProperty config invalid`, config);\n  }\n\n  if ( !config.propertyKey || !config.prototypeKey || !config.processor || !config.decorator ) {\n    throw new Error(`registerProperty config invalid`, config)\n  }\n\n  decoratorMap[config.propertyKey] = config.decorator;\n  processorMap[config.prototypeKey] = config.processor;\n\n  if ( typeof config.modifier === 'function' ) {\n    modifierArray.push(config.modifier);\n  }\n}\n\n/**\n * Property 组件类成员变量装饰器\n * @desc 会自动使用`babel-plugin-decorator-inject`进行注入，无需开发者手动使用\n *\n * @param {Prorotype} target 被装饰目标类的prototype\n * @param {String} key 被装饰成员变量的标识符\n * @param {Object} descriptor 被装饰成员变量的descriptor\n * @param {Object} descriptor.enumerable 是否可被枚举\n * @param {Object} descriptor.configurable 是否可被删除\n * @param {Object} descriptor.writable 是否可改写\n * @param {Object} descriptor.initializer 成员变量初始化函数\n */\nexport function Property(target, key, descriptor) {\n  \"use strict\";\n\n  // 分别处理一下 static 和 非static 的 property\n  /**\n   * isStatic\n   * @desc\n   *   如果是 static property, target是 classFunction => type:function\n   *   如果是 member property, target是 classFunction.prototype => type:object\n   * @type {boolean}\n   */\n  const isStatic = typeof target === 'function';\n\n  /**\n   * isProperty\n   * @desc\n   *   如果是 classProperty, initializer是 function, value是 undefined\n   *   如果是 classMethod, initializer是 undefined, value是 function\n   * @type {boolean}\n   */\n  const isProperty = typeof descriptor.initializer === 'function';\n\n  // 检验一下是否是 property 而不是 method\n  if ( !isProperty ) {\n    throw new Error(`${isStatic?'Static':'Member'} Method [${key}] should not be added decorator [Component.Property] for auto-detection of vue option`)\n  }\n\n  // 不管是否static， 开始挂载到target上\n  // 如果是static，挂在到function上\n  // 如果是member，挂在到prototype上\n  // 最终在class-Decorator上都能拿到\n\n  // TODO: 根据不同key进行不同processor的路由\n  PropertyDecorator(target, key, descriptor);\n\n}\n\n// 注册内置属性处理器\nregisterProperty(require('./data'));\nregisterProperty(require('./props'));\nregisterProperty(require('./watch'));\nregisterProperty(require('./components'));\n\n// TODO: extends, mixins, components, 等其他vueOption入参\n\nexport { Watch } from './watch';"]}