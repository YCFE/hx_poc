{"version":3,"sources":["../../../src/type/component/object.js"],"names":["ComponentObjectModifier","meta","connectFunc","connectFuncExec","hasMapExec","mapExec","modify","objFunc","options","wrapOptions","func"],"mappings":";;;QAGgBA,uB,GAAAA,uB;;AAHhB;;AACA;;AAEO,SAASA,uBAAT,GAA4C;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AAOjD,MAAIC,cAAc,IAAlB;AACA,MAAIC,kBAAkB,KAAtB;AACA,MAAIC,aAAa,KAAjB;AACA,MAAK,iCAAmBH,IAAnB,CAAL,EAAgC;;AAE9BE,sBAAkB,CAAC,CAACF,KAAKI,OAAzB;AACAD,iBAAa,OAAOH,KAAKI,OAAZ,KAAwB,WAArC;AACAH,kBAAc,kCAAoBD,IAApB,CAAd;AACD;;AAED,SAAO,SAASK,MAAT,CAAgBC,OAAhB,EAAyB;;AAE9B,QAAIC,UAAUD,SAAd;;AAEA,+BAAeC,OAAf;;AAIA,QAAKN,WAAL,EAAmB;AAEjB,UAAKE,UAAL,EAAkB;AAEhB,YAAKD,eAAL,EAAuB;AACrBK,oBAAUN,YAAYM,OAAZ,CAAV;AACD,SAFD,MAEO;AAELA,kBAAQ,4BAAR,IAAwCN,WAAxC;AACD;AACF,OARD,MAQO;AAGL,YAAMO,cAAcP,YAAYM,OAAZ,CAApB;AACAC,oBAAY,wBAAZ,IAAwC;AACtCC,gBAAMR,WADgC;AAEtCM,mBAASA;AAF6B,SAAxC;;AAMAA,kBAAUC,WAAV;AACD;AACF,KAtBD,MAsBO,CAEN;;AAED,WAAOD,OAAP;AAED,GApCD;AAsCD","file":"object.js","sourcesContent":["import { modifyProperty } from '../property/index.js';\nimport { hasConnectProperty, generateConnectFunc } from '../connect';\n\nexport function ComponentObjectModifier(meta = {}) {\n\n  // 从meta中读取需要的\n  // mapStateToProps, mapMethodsToProps, mapMethodsToEvents, mapExec\n  // 交给 connect 生成一个 function\n  // 然后交给 decorate 的return options 里面拼上去\n  //\n  let connectFunc = null;\n  let connectFuncExec = false;\n  let hasMapExec = false;\n  if ( hasConnectProperty(meta) ) {\n\n    connectFuncExec = !!meta.mapExec;\n    hasMapExec = typeof meta.mapExec !== 'undefined';\n    connectFunc = generateConnectFunc(meta);\n  }\n\n  return function modify(objFunc) {\n\n    let options = objFunc();\n\n    modifyProperty(options);\n\n    // 考虑下兼容性问题\n    // 如果有 connectFunc，说明声明了 connectFunc\n    if ( connectFunc ) {\n      // 如果手工指定了 hasMapExec, 按照指定的来\n      if ( hasMapExec ) {\n        // 自动执行connect\n        if ( connectFuncExec ) {\n          options = connectFunc(options);\n        } else {\n          // 不执行，需要挂载到 vue-loader 去识别\n          options['__kylin_connect_function__'] = connectFunc;\n        }\n      } else {\n        // 在没主动指定 mapExec 的情况下，默认行为变更\n        // 自动执行, 考虑到 vue-loader 的影响，配置 挂载 connectFunc 和 options\n        const wrapOptions = connectFunc(options);\n        wrapOptions['__kylin_connect_wrap__'] = {\n          func: connectFunc,\n          options: options\n        }\n        // wrapOptions['__kylin_connect_function_in wrap__'] = connectFunc;\n        // wrapOptions['__kylin_connect_options_in_wrap__'] = options;\n        options = wrapOptions;\n      }\n    } else {\n      // 没声明connectFunc，完全不处理\n    }\n\n    return options;\n\n  }\n\n}"]}